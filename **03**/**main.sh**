par1=$1
par2=$2
par3=$3
par4=$4

white=1
red=2
green=3
blue=4
purple=5
black=6

declare -i fo
declare -i sh
declare -i fon
declare -i shr

#!/bin/bash

if [[ "$par1" == "$par2" || "$par3" == "$par4" ]]; then
echo "Wrong colors, please restart and choose not similar"
exit
elif ! [[ "$par1" =~ [1-6] && "$par2" =~ [1-6] && "$par3" =~ [1-6] && "$par4" =~ [1-6] ]]; then
echo "Wrong numbers, please restart and choose not from 1 to 6"
exit
fi

if [[ $par1 -eq white ]]; then
    fo=7;
elif [[ $par1 -eq red ]]; then
    fo=1;
elif [[ $par1 -eq green ]]; then
    fo=2;
elif [[ $par1 -eq blue ]]; then
    fo=4;
elif [[ $par1 -eq purple ]]; then
    fo=5;
elif [[ $par1 -eq black ]]; then
    fo=0;
fi

if [[ $par3 -eq white ]]; then
    fon=7;
elif [[ $par3 -eq red ]]; then
    fon=1;
elif [[ $par3 -eq green ]]; then
    fon=2;
elif [[ $par3 -eq blue ]]; then
    fon=4;
elif [[ $par3 -eq purple ]]; then
    fon=5;
elif [[ $par3 -eq black ]]; then
    fon=0;
fi

if [[ $par2 -eq white ]]; then
    sh=7;
elif [[ $par2 -eq red ]]; then
    sh=1;
elif [[ $par2 -eq green ]]; then
    sh=2;
elif [[ $par2 -eq blue ]]; then
    sh=4;
elif [[ $par2 -eq purple ]]; then
    sh=5;
elif [[ $par2 -eq black ]]; then
    sh=0;
fi

if [[ $par4 -eq white ]]; then
    shr=7;
elif [[ $par4 -eq red ]]; then
    shr=1;
elif [[ $par4 -eq green ]]; then
    shr=2;
elif [[ $par4 -eq blue ]]; then
    shr=4;
elif [[ $par4 -eq purple ]]; then
    shr=5;
elif [[ $par4 -eq black ]]; then
    shr=0;
fi

TIMEZONE=$(timedatectl | sed -n 4p | cut -c 17-)
OS=$(uname)
ARCH=$(arch)
DATE=$(date "+%d %B %Y %H:%M:%S")
UPTIME=$(uptime | awk '{print $3}'| sed -e "s/.$//")
UPTIMES=$(cat /proc/uptime | awk '{print $1}')
IP=$(hostname -I | awk '{print $1}')
NETMASK=$(netstat -r | sed -n 4p | awk '{print $3}')
DEFGW=$(netstat -nr | sed -n 3p | awk '{print $2}')
MEM=$(free -m | sed -n 2p | awk '{printf("%.3f Gb", $2*0.001)}')
MEMU=$(free -m | sed -n 2p | awk '{printf("%.3f Gb", $3*0.001)}')
MEMF=$(free -m | sed -n 2p | awk '{printf("%.3f Gb", $4*0.001)}')
ROOTS=$(df --block-size=MB / | sed -n 2p | awk '{printf("%.2f MB",$2*0.01)}')
ROOTU=$(df --block-size=MB / | sed -n 2p | awk '{printf("%.2f MB",$3*0.01)}')
ROOTF=$(df --block-size=MB / | sed -n 2p | awk '{printf("%.2f MB",$4*0.01)}')

echo "$(tput setab $fo)$(tput setaf $sh)**TIMEZONE**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$TIMEZONE**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**USER**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$USER**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**OS ARCH**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$OS $ARCH**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**DATE**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$DATE**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**UPTIME**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$UPTIME**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**UPTIME_SEC**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$UPTIMES**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**IP**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$IP**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**MASK**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$NETMASK**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**GATEWAY**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$DEFGW**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**RAM_TOTAL**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$MEM**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**RAM_USED**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$MEMU**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**RAM_FREE**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$MEMF**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**SPACE_ROOT**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$ROOTS**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**SPACE_ROOT_USED**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$ROOTU**$(tput sgr0)"
echo "$(tput setab $fo)$(tput setaf $sh)**SPACE_ROOT_FREE**$(tput sgr 0) = $(tput setab $fon)$(tput setaf $shr)**$ROOTF**$(tput sgr0)"
